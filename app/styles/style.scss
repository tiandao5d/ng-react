@import './animate.min.css';
body {
  color: #333;
}

.page-body {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  padding: 50px;
  overflow: auto;
}

// 自定义toast
.ngui-toast {
  position: fixed;
  z-index: 9999;
  width: 300px;
  color: #fff;
  border-radius: 0;
  background: #337ab7;
  box-shadow: 5px 5px 10px rgba(0, 0, 0, .3);
  padding: 15px;
  top: 15px;
  right: 15px;
}

.ngui-toast.warning {
  color: #fff;
  background: #f0ad4e;
}

.ngui-toast.error {
  color: #fff;
  background: #d9534f;
}

.ngui-toast.success {
  color: #fff;
  background: #5cb85c;
}

.ngui-toast.info {
  color: #fff;
  background: #5bc0de;
}


/*正方形loading*/

.sk-cube-grid {
  position: relative;
  width: 100px;
  height: 100px;
  margin: 100px auto;
  z-index: 2000;
}

.sk-cube-grid .sk-cube {
  width: 33%;
  height: 33%;
  background-color: #d3d3d3;
  float: left;
  -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
  animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
}

.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

@-webkit-keyframes sk-cubeGridScaleDelay {

  0%,
  70%,
  100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }

  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}

@keyframes sk-cubeGridScaleDelay {

  0%,
  70%,
  100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }

  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}